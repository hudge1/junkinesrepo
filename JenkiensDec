pipeline {
    agent any

    environment {
        GIT_REPO = 'https://your-git-repo-url.git'
        BRANCH = 'main'
        APP_NAME = 'your-app-name'
        TOMCAT_URL = 'http://your-tomcat-server:8080/manager/text'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${env.BRANCH}", url: "${env.GIT_REPO}"
            }
        }
        
        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }
        
        stage('Deploy') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'tomcat-credentials', usernameVariable: 'TOMCAT_USER', passwordVariable: 'TOMCAT_PASSWORD')]) {
                    script {
                        def warFile = "target/${env.APP_NAME}.war"
                        def deployUrl = "${env.TOMCAT_URL}/deploy?path=/your-app-path&update=true"
                        
                        sh """
                        curl --upload-file ${warFile} --user ${TOMCAT_USER}:${TOMCAT_PASSWORD} ${deployUrl}
                        """
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment succeeded!'
        }
        failure {
            echo 'Deployment failed!'
        }
    }
}
